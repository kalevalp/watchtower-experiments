service: wt-full-flow

plugins:
  - serverless-step-functions

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1
  stage: test
  environment:
    WATCHTOWER_EVENT_KINESIS_STREAM:
      Ref: EventsStream
    PROFILE_WATCHTOWER: 1
  iamRoleStatements:
    - Effect: Allow             # Required for writing wt events
      Action:
        - 'kinesis:DescribeStream'
        - 'kinesis:PutRecord'
        - 'kinesis:PutRecords'
      Resource:
        Fn::GetAtt: [EventsStream, Arn]

functions:
  hello:
    handler: handler-wrapper.hello
    events:
      - http:
          path: microbmark
          method: get

  ########################################
  ## Watchtower Functions
  ##
  watchtower-ingestion: ${file(${self:custom.wtPathPrefix}watchtower/functions.yml):watchtower-ingestion}   # Event ingestion function
  watchtower-monitor:   ${file(${self:custom.wtPathPrefix}watchtower/functions.yml):watchtower-monitor}     # Event monitor
  wt-monitor-trigger:   ${file(${self:custom.wtPathPrefix}watchtower/functions.yml):wt-monitor-trigger}     # A function that triggers the event monitoring step-functions state machine
  ##
  ## END of Watchtower Functions
  ########################################


custom:
  wtPathPrefix: ""

  ##########################################
  ## Watchtower Checker State Machine
  ##
stepFunctions:
  stateMachines:
    checker: ${file(${self:custom.wtPathPrefix}watchtower/stateMachine.yml):stateMachines.checker}
  ##
  ## End of Watchtower Checker State Machine
  ##########################################

resources:
  Resources:
    EventsTable:          ${file(${self:custom.wtPathPrefix}watchtower/ddbTables.yml):Resources.EventsTable}
    CheckpointsTable:     ${file(${self:custom.wtPathPrefix}watchtower/ddbTables.yml):Resources.CheckpointsTable}
    InvocationStream:     ${file(${self:custom.wtPathPrefix}watchtower/kinesisStreams.yml):Resources.InvocationStream}
    EventsStream:         ${file(${self:custom.wtPathPrefix}watchtower/kinesisStreams.yml):Resources.EventsStream}
    EventWriterRole:      ${file(${self:custom.wtPathPrefix}watchtower/iamRoles.yml):Resources.EventWriterRole}
    EventReaderRole:      ${file(${self:custom.wtPathPrefix}watchtower/iamRoles.yml):Resources.EventReaderRole}
    StateMachineListExec: ${file(${self:custom.wtPathPrefix}watchtower/iamRoles.yml):Resources.StateMachineListExec}
  Outputs:
    WTCheckerMachine: ${file(${self:custom.wtPathPrefix}watchtower/outputs.yml):Outputs.WTCheckerMachine}
    WTEventsKinesisStream: ${file(${self:custom.wtPathPrefix}watchtower/outputs.yml):Outputs.WTEventsKinesisStream}
    WTEventsKinesisStreamARN: ${file(${self:custom.wtPathPrefix}watchtower/outputs.yml):Outputs.WTEventsKinesisStreamARN}
